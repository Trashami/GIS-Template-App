{"version":3,"names":["NAMESPACE","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","getAssetPath","path","assetUrl","URL","plt","$resourcesUrl$","origin","win","location","href","pathname","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","head","querySelector","getAttribute","result_exports","err","map","ok","unwrap","unwrapErr","value","isOk","isErr","result","fn","val","Promise","then","newVal","createTime","fnName","tagName","uniqueTime","key","measureText","CONTENT_REF_ID","ORG_LOCATION_ID","SLOT_NODE_ID","TEXT_NODE_ID","HYDRATE_ID","HYDRATED_STYLE_ID","HYDRATE_CHILD_ID","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","h","nodeName","vnodeData","children","child","simple","lastSimple","vNodeChildren","walk","c","i2","length","Array","isArray","String","$text$","push","newVNode","classData","className","class","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","tag","text","$flags$","$tag$","$elm$","Host","isHost","node","forEach","cb","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","$name$","vtag","vtext","initializeClientHydrate","hostElm","hostId","hostRef","endHydrate","shadowRoot","childRenderNodes","slotNodes","shadowRootNodes","$vnode$","$orgLocNodes$","initializeDocumentHydrate","doc","body","Map","removeAttribute","clientHydrate","orgLocationId","$hostId$","$nodeId$","orgLocationNode","supportsShadow","parentNode","insertBefore","nextSibling","delete","shadowRootNode","appendChild","parentVNode","childNodeType","childIdSplt","childVNode","nodeType","split","$depth$","$index$","toLowerCase","childNodes","nodeValue","textContent","remove","createElement","setAttribute","orgLocNodes","set","parsePropertyValue","propValue","propType","parseFloat","getElement","ref","getHostRef","$hostElement$","createEvent","flags","elm","emit","detail","emitEvent","bubbles","composed","cancelable","opts","ev","ce","dispatchEvent","rootAppliedStyles","WeakMap","registerStyle","scopeId2","cssText","allowCS","style","styles","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","addStyle","styleContainerNode","cmpMeta","mode","getScopeId","appliedStyles","styleElm","Set","has","host","innerHTML","nonce","$nonce$","add","adoptedStyleSheets","includes","attachStyles","$cmpMeta$","endAttachStyles","$tagName$","getRootNode","classList","cmp","convertScopedToShadow","css","replace","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","oldClasses","parseClassList","newClasses","prop","removeProperty","setProperty","slice","capture","endsWith","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","rel","ael","isComplex","n","e","xlink","removeAttributeNS","setAttributeNS","parseClassListRegex","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","scopeId","hostTagName","useNativeShadowDom","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","newVNode2","childNode","createTextNode","createElementNS","addVnodes","before","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldVNode","oldChildren","newChildren","data","vNode","renderVdom","renderFnResults","isInitialLoad","rootVnode","$attrsToReflect$","propName","attribute","hasAttribute","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","maybePromise","$queuedListeners$","methodName","event","safeCall","enqueue","updateComponent","isPromisey","async","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","forceUpdate","isConnected","who","documentElement","namespace","method","arg","getValue","$instanceValues$","setValue","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","componentShouldUpdate","proxyComponent","Cstr","prototype","watchers","members","entries","memberFlags","this","configurable","args","_a2","$onInstancePromise$","_a3","attrNameToPropName","attributeChangedCallback","attrName","jmp","hasOwnProperty","flags2","entry","callbackName","call","observedAttributes","from","_","m","initializeComponent","hmrVersionId","bundleId","$lazyBundleId$","loadModule","endLoad","isProxied","endNewInstance","fireConnectedCallback","constructor","customElements","whenDefined","endRegisterStyles","schedule","connectedCallback","endConnected","addHostEventListeners","$listeners$","$onReadyPromise$","disconnectInstance","disconnectedCallback","$rmListeners$","rmListener","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements2","metaCharset","dataStyles","deferredConnectedCallbacks","styles2","querySelectorAll","appLoadFallback","isBootstrapping","assign","resourcesUrl","baseURI","hasSlotRelocation","lazyBundle","compactMeta","HostElement","HTMLElement","self","super","registerHost","attachShadow","delegatesFocus","clearTimeout","componentOnReady","define","firstChild","setTimeout","Fragment","listeners","attachParentListeners","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","supportsListenerOptions","passive","setNonce","hostRefs","registerInstance","lazyInstance","hostElement","el","console","error","cmpModules","exportName","module","import","importedModule","window","document","h2","raf","requestAnimationFrame","eventName","listener","addEventListener","removeEventListener","CustomEvent","supportsListenerOptions2","promiseResolve","resolve","queuePending","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","readTask"],"sources":["@stencil/core/internal/app-data","../../node_modules/@stencil/core/internal/client/index.js?app-data=conditional"],"sourcesContent":["export const NAMESPACE = 'calcite';\nexport const BUILD = /* calcite */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: true, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: false, connectedCallback: true, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: true, hostListenerTargetDocument: true, hostListenerTargetParent: false, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: false, hydratedAttribute: true, hydratedClass: false, initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: false, scopedSlotTextContentFix: false, scriptDataOpts: true, shadowDelegatesFocus: true, shadowDom: true, slot: true, slotChildNodesFix: false, slotRelocation: false, state: true, style: true, svg: true, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* calcite */ {};\n","/*\n Stencil Client Platform v4.17.1 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD2.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD2.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD2.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}[calcite-hydrated]{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD3.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD3.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD3.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD3.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD3.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD3.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD3.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD3.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const shadowRootNodes = BUILD4.shadowDom && shadowRoot ? [] : null;\n  const vnode = hostRef.$vnode$ = newVNode(tagName, null);\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map((c) => {\n    const orgLocationId = c.$hostId$ + \".\" + c.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = c.$elm$;\n    if (orgLocationNode && supportsShadow && orgLocationNode[\"s-en\"] === \"\") {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName;\n      if (orgLocationNode) {\n        node[\"s-ol\"] = orgLocationNode;\n        node[\"s-ol\"][\"s-nr\"] = node;\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n  if (BUILD4.shadowDom && shadowRoot) {\n    shadowRootNodes.map((shadowRootNode) => {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        parentVNode.$children$[childVNode.$index$] = childVNode;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        node.childNodes[i2],\n        hostId\n      );\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId\n        );\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          if (childIdSplt[5]) {\n            node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node[\"s-sn\"] = \"\";\n          }\n          node[\"s-sr\"] = true;\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n            if (childVNode.$name$) {\n              childVNode.$elm$.setAttribute(\"name\", childVNode.$name$);\n            }\n            node.parentNode.insertBefore(childVNode.$elm$, node);\n            node.remove();\n            if (childVNode.$depth$ === \"0\") {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n          slotNodes.push(childVNode);\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD4.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    let i2 = 0;\n    for (; i2 < node.childNodes.length; i2++) {\n      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);\n    }\n    if (node.shadowRoot) {\n      for (i2 = 0; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD5.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD5.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD5.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD12, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD6.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD7.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD8.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD8.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if (BUILD8.hydrateServerSide || BUILD8.hotModuleReplacement) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD8.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD8.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD8.shadowDom || BUILD8.scoped) && BUILD8.cssAnnotations && flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD8.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD8.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\nvar convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, \"$1{\");\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD9.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD9.vdomStyle && memberName === \"style\") {\n      if (BUILD9.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD9.vdomKey && memberName === \"key\") {\n    } else if (BUILD9.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD9.vdomListener && (BUILD9.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD9.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD9.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD9.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD9.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2, memberName) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD10.updatable) {\n    for (memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD11.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD11.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD11.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD11.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD11.isDebug || BUILD11.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD11.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD11.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD11.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD11.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if ((BUILD11.shadowDom || BUILD11.scoped) && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD11.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD11.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD11.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find((ref) => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        host.insertBefore(childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD11.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD11.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD11.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, BUILD11.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD11.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD11.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD11.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD11.slotRelocation) {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD11.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD11.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD11.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD11.vdomText || text === null) {\n    if (BUILD11.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD11.vdomAttribute || BUILD11.reflect) {\n      if (BUILD11.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD11.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD11.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD11.updatable && BUILD11.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (BUILD11.updatable && oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD11.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD11.vdomText && BUILD11.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD11.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  for (const childNode of elm.childNodes) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD11.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD11.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD11.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD11.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD11.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD11.scoped || BUILD11.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD11.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD11.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD11.isDebug || BUILD11.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD11.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD11.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD11.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD12.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD12.taskQueue && BUILD12.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD12.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD12.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD12.lazyLoad && BUILD12.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD12.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD12.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD12.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD12.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD12.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD12.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD12.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD12.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD12.allRenderFn ? true : false;\n  const lazyLoad = BUILD12.lazyLoad ? true : false;\n  const taskQueue = BUILD12.taskQueue ? true : false;\n  const updatable = BUILD12.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD12.hasRenderFn || BUILD12.reflect) {\n      if (BUILD12.vdomRender || BUILD12.reflect) {\n        if (BUILD12.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD12.cmpDidRender) {\n    if (BUILD12.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD12.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD12.asyncLoading && BUILD12.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD12.cmpDidLoad) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD12.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD12.cmpDidUpdate) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD12.method && BUILD12.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD12.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD12.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD12.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD12.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD12.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD12.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => BUILD12.hydratedClass ? elm.classList.add(\"calcite-hydrated\") : BUILD12.hydratedAttribute ? elm.setAttribute(\"calcite-hydrated\", \"\") : void 0;\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  const elm = BUILD13.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD13.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD13.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD13.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD13.lazyLoad || instance) {\n      if (BUILD13.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD13.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD13.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a;\n  const prototype = Cstr.prototype;\n  if (BUILD14.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach(\n      (cbName) => Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n          const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((instance2) => {\n              const cb = instance2[cbName];\n              typeof cb === \"function\" && cb.call(instance2, ...args);\n            });\n          } else {\n            const cb = instance[cbName];\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      })\n    );\n  }\n  if (BUILD14.member && cmpMeta.$members$) {\n    if (BUILD14.watchCallback && Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries(cmpMeta.$members$);\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD14.prop || BUILD14.state) && (memberFlags & 31 /* Prop */ || (!BUILD14.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            if (BUILD14.isDev) {\n              const ref = getHostRef(this);\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (BUILD14.lazyLoad && BUILD14.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD14.observeAttribute && (!BUILD14.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_a = cmpMeta.$watchers$) != null ? _a : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD14.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD15.lazyLoad || BUILD15.hydrateClientSide) && bundleId) {\n      Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (Cstr.then) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await Cstr;\n        endLoad();\n      }\n      if ((BUILD15.isDev || BUILD15.isDebug) && !Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD15.member && !Cstr.isProxied) {\n        if (BUILD15.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD15.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD15.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD15.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      customElements.whenDefined(cmpMeta.$tagName$).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD15.style && Cstr.style) {\n      let style = Cstr.style;\n      if (BUILD15.mode && typeof style !== \"string\") {\n        style = style[hostRef.$modeName$ = computeMode(elm)];\n        if (BUILD15.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD15.hydrateServerSide && BUILD15.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD15.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2, false));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD15.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD15.lazyLoad && BUILD15.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD16.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD16.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD16.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD16.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD16.slotRelocation && !hostId) {\n        if (BUILD16.hydrateServerSide || (BUILD16.slot || BUILD16.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD16.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD16.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD16.prop && !BUILD16.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD16.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD16.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD17.lazyLoad && BUILD17.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD17.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD17.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD17.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\nimport { NODE_TYPES } from \"../../mock-doc/index.js\";\nvar patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD18.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD18.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\"\n      ];\n      for (; i2 < srcNode.childNodes.length; i2++) {\n        slotted = srcNode.childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD18.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(srcNode.childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const slotNode = getHostSlotNode(this.childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode) {\n        const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove[\"s-sn\"]);\n        const existingNode = slotChildNodes.find((n) => n === toRemove);\n        if (existingNode) {\n          existingNode.remove();\n          updateFallbackSlotVisibility(this);\n          return;\n        }\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  const originalPrepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n      if (slotNode) {\n        const slotPlaceholder = document.createTextNode(\"\");\n        slotPlaceholder[\"s-nr\"] = newChild;\n        slotNode[\"s-cr\"].parentNode.__appendChild(slotPlaceholder);\n        newChild[\"s-ol\"] = slotPlaceholder;\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return originalPrepend.call(this, newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  if (BUILD18.experimentalScopedSlotChanges) {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      // To mimic shadow root behavior, we need to return the text content of all\n      // nodes in a slot reference node\n      get() {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        const textContent = slotRefNodes.map((node) => {\n          var _a, _b;\n          const text = [];\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            if (slotContent.nodeType === NODE_TYPES.TEXT_NODE || slotContent.nodeType === NODE_TYPES.ELEMENT_NODE) {\n              text.push((_b = (_a = slotContent.textContent) == null ? void 0 : _a.trim()) != null ? _b : \"\");\n            }\n            slotContent = slotContent.nextSibling;\n          }\n          return text.filter((ref) => ref !== \"\").join(\" \");\n        }).filter((text) => text !== \"\").join(\" \");\n        return \" \" + textContent + \" \";\n      },\n      // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n      // reference node. If a default slot reference node exists, the text content will be\n      // placed there. Otherwise, the new text node will be hidden\n      set(value) {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        slotRefNodes.forEach((node) => {\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            const tmp = slotContent;\n            slotContent = slotContent.nextSibling;\n            tmp.remove();\n          }\n          if (node[\"s-sn\"] === \"\") {\n            const textNode = this.ownerDocument.createTextNode(value);\n            textNode[\"s-sn\"] = \"\";\n            node.parentElement.insertBefore(textNode, node.nextSibling);\n          } else {\n            node.remove();\n          }\n        });\n      }\n    });\n  } else {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      get() {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === NODE_TYPES.TEXT_NODE) {\n          return slotNode.nextSibling.textContent;\n        } else if (slotNode) {\n          return slotNode.textContent;\n        } else {\n          return this.__textContent;\n        }\n      },\n      set(value) {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === NODE_TYPES.TEXT_NODE) {\n          slotNode.nextSibling.textContent = value;\n        } else if (slotNode) {\n          slotNode.textContent = value;\n        } else {\n          this.__textContent = value;\n          const contentRefElm = this[\"s-cr\"];\n          if (contentRefElm) {\n            this.insertBefore(contentRefElm, this.firstChild);\n          }\n        }\n      }\n    });\n  }\n};\nvar patchChildSlotNodes = (elm, cmpMeta) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  if (cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n    const childNodesFn = elm.__lookupGetter__(\"childNodes\");\n    Object.defineProperty(elm, \"children\", {\n      get() {\n        return this.childNodes.map((n) => n.nodeType === 1);\n      }\n    });\n    Object.defineProperty(elm, \"childElementCount\", {\n      get() {\n        return elm.children.length;\n      }\n    });\n    Object.defineProperty(elm, \"childNodes\", {\n      get() {\n        const childNodes = childNodesFn.call(this);\n        if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && getHostRef(this).$flags$ & 2 /* hasRendered */) {\n          const result = new FakeNodeList();\n          for (let i2 = 0; i2 < childNodes.length; i2++) {\n            const slot = childNodes[i2][\"s-nr\"];\n            if (slot) {\n              result.push(slot);\n            }\n          }\n          return result;\n        }\n        return FakeNodeList.from(childNodes);\n      }\n    });\n  }\n};\nvar getAllChildSlotNodes = (childNodes) => {\n  const slotRefNodes = [];\n  for (const childNode of Array.from(childNodes)) {\n    if (childNode[\"s-sr\"]) {\n      slotRefNodes.push(childNode);\n    }\n    slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n  }\n  return slotRefNodes;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD19.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD19.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD19.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD19.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD19.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD19.experimentalSlotFixes) {\n    if (BUILD19.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n  } else {\n    if (BUILD19.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype, cmpMeta);\n    }\n    if (BUILD19.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD19.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD19.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      connectedCallback(this);\n      if (BUILD19.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD19.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (BUILD19.shadowDelegatesFocus) {\n          this.attachShadow({\n            mode: \"open\",\n            delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n          });\n        } else {\n          this.attachShadow({ mode: \"open\" });\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD19.style && BUILD19.mode && !BUILD19.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD20.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  const styles2 = /* @__PURE__ */ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n  let appLoadFallback;\n  let isBootstrapping = true;\n  let i2 = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD20.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD20.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  if (BUILD20.hydrateClientSide && BUILD20.shadowDom) {\n    for (; i2 < styles2.length; i2++) {\n      registerStyle(styles2[i2].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles2[i2].innerHTML), true);\n    }\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD20.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD20.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD20.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD20.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD20.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD20.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD20.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (BUILD20.shadowDelegatesFocus) {\n                self.attachShadow({\n                  mode: \"open\",\n                  delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                });\n              } else {\n                self.attachShadow({ mode: \"open\" });\n              }\n            } else if (!BUILD20.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD20.experimentalSlotFixes) {\n        if (BUILD20.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n        }\n      } else {\n        if (BUILD20.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype, cmpMeta);\n        }\n        if (BUILD20.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD20.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD20.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD20.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD20.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD20.invisiblePrehydration && (BUILD20.hydratedClass || BUILD20.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD20.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD21.hostListener && listeners) {\n    if (BUILD21.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD21.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  try {\n    if (BUILD21.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        hostRef.$lazyInstance$[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD21.hostListenerTargetDocument && flags & 4 /* TargetDocument */)\n    return doc;\n  if (BUILD21.hostListenerTargetWindow && flags & 8 /* TargetWindow */)\n    return win;\n  if (BUILD21.hostListenerTargetBody && flags & 16 /* TargetBody */)\n    return doc.body;\n  if (BUILD21.hostListenerTargetParent && flags & 32 /* TargetParent */)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = {\n      hostIds: 0,\n      rootLevelIds: 0,\n      staticComponents: new Set(staticComponents)\n    };\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a, _b;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            (_b = nodeRef.parentNode) == null ? void 0 : _b.insertBefore(commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    node.childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      parentNode == null ? void 0 : parentNode.insertBefore(commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\n\n// src/client/client-host-ref.ts\nvar hostRefs = BUILD22.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD22.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD22.method && BUILD22.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD22.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD23.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD24.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  }\n  const module = !BUILD24.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD24.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD24.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-window.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = (\n  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n  BUILD25.shadowDomShim && BUILD25.shadowDom ? /* @__PURE__ */ (() => (doc.head.attachShadow + \"\").indexOf(\"[native\") > -1)() : true\n);\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD25.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD26.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD26.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"mappings":"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"}