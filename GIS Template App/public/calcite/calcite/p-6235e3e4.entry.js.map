{"version":3,"names":["colorName","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","isArrayish","obj","Array","isArray","length","splice","Function","Object","getOwnPropertyDescriptor","constructor","name","require$$0","concat","prototype","slice","swizzle","simpleSwizzleModule","args","results","i","len","arg","call","push","wrap","fn","arguments","colorNames","require$$1","hasOwnProperty","reverseNames","create","cs","colorStringModule","to","get","string","prefix","substring","toLowerCase","val","model","hsl","hwb","rgb","value","abbr","hex","rgba","per","keyword","match","hexAlpha","i2","parseInt","parseFloat","Math","round","clamp","alpha","h","s","l","a","isNaN","w","b","hexDouble","percent","r","g","hsla","hwba","num","min","max","str","toString","toUpperCase","cssKeywords","reverseKeywords","key","keys","convert","channels","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","conversions","Error","defineProperty","delta","rdif","gdif","bdif","v","diff","diffc","c","k","m","y","comparativeDistance","x","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","t2","t3","t1","smin","lmin","sv","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","saturation","ansi","color","mult","rem","integer","colorString","split","map","char","join","chroma","grayscale","hue","pure","mg","buildGraph","graph","models","parent","deriveBFS","fromModel","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","toModel","path","cur","conversion","route","wrapRaw","wrappedFn","arg0","undefined","wrapRounded","result","forEach","routes","routeModels","raw","colorConvert","skippedModels","hashedModelKeys","sort","limiters","Color","object","this","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","saturationv","wblack","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","assertArray","roundTo","number","Number","toFixed","channel","modifier","CSS","colorField","colorFieldScope","colorMode","colorModeContainer","container","control","controlAndScope","controlSection","deleteColor","header","hexAndChannelsGroup","hexOptions","hueScope","hueSlider","opacityScope","opacitySlider","preview","previewAndSliders","saveColor","savedColor","savedColors","savedColorsButtons","savedColorsSection","scope","section","slider","sliders","splitSection","DEFAULT_COLOR","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","HSV_LIMITS","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","DIMENSIONS","height","width","thumb","radius","SCOPE_SIZE","colorPickerCss","CalciteColorPickerStyle0","throttleFor60FpsInMs","ColorPicker","internalColorUpdateContext","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","handleTabActivate","event","channelMode","currentTarget","getAttribute","updateChannelsFromColor","handleColorFieldScopeKeyDown","arrowKeyToXYOffset","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","preventDefault","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","shiftKey","arrowKeyToXOffset","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","isClearable","input","target","normalizedHex","normalizeHex","hexify","alphaCompatible","handleSavedColorSelect","swatch","handleChannelInput","channelIndex","isAlphaChannel","inputValue","adjustedValue","clamped","handleChannelChange","shouldClearChannels","opacityToAlpha","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","isPrimaryPointerButton","offsetX","offsetY","window","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","activeCanvasInfo","context","colorFieldRenderingContext","bounds","canvas","getBoundingClientRect","colorFieldScopeNode","focus","handleHueSliderPointerDown","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","handleOpacitySliderPointerDown","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","previouslyDragging","drawColorControls","calciteColorPickerChange","emit","el","isConnected","samplingX","samplingY","clientX","clientY","matches","storeColorFieldScope","storeHueScope","renderChannelsTabTitle","activeChannelMode","messages","selected","label","class","onCalciteTabsActivate","renderChannelsTab","alphaChannel","isRgb","channelAriaLabels","direction","getElementDir","channelsToRender","dir","channelValue","index","alphaToOpacity","renderChannel","ariaLabel","suffix","lang","effectiveLocale","numberButtonType","numberingSystem","onCalciteInputNumberChange","onCalciteInputNumberInput","onKeyDown","handleKeyDown","scale","style","marginLeft","suffixText","colorToDelete","inStorage","filter","storageKey","storageId","localStorage","setItem","colorToSave","alreadySaved","throttle","type","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","dimensions","initColorField","getContext","updateCanvasSize","initHueSlider","initOpacitySlider","storeOpacityScope","handleOpacityScopeKeyDown","toChannels","handleAllowEmptyOrClearableChange","clearable","allowEmpty","handleAlphaChannelChange","format","console","warn","handleColorChange","oldColor","previousColor","handleFormatOrAlphaChannelChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","handleValueChange","oldValue","checkMode","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","composedPath","some","classList","contains","complementaryBump","setFocus","componentFocusable","componentWillLoad","setUpLoadableComponent","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","removeEventListener","disconnectInteractive","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","render","channelsDisabled","sliderWidth","thumbRadius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","getAdjustedScopePosition","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","disabled","onPointerDown","ref","role","top","left","tabindex","opacity","onCalciteColorPickerHexInputChange","slot","saved","appearance","iconStart","kind","onClick","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","toValue","hexMode","hasAlpha","HEXA","replace","needToInjectAlpha","values","colorObject","normalizeAlpha","getSliderCapSpacing","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","devicePixelRatio","adjustedSliderDimensions","hsvColor","requestAnimationFrame","drawThumb","applyAlpha","startAngle","endAngle","outlineWidth","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","gradient","hueSliderColorStopKeywords","offset","currentOffset","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","closeToEdge","closeToRangeEdge","remap","isAlpha","hexInput","opacityInput","colorPickerHexInputCss","CalciteColorPickerHexInputStyle0","ColorPickerHexInput","onHexInputBlur","hexInputNode","internalColor","willClearValue","isLonghand","isLonghandHex","onHexInputChange","isValidHex","formatHexForInternalInput","rgbToHex","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","nodeValue","normalized","preserveExistingAlpha","internalSetValue","onOpacityInputChange","onInputKeyDown","altKey","ctrlKey","metaKey","isNudgeKey","previousNonNullValue","bump","nudgeRGBChannels","withModifiers","singleChar","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","storeHexInputRef","storeOpacityInputRef","hexLabel","hexInputValue","opacityInputValue","inputScale","maxLength","onCalciteInputTextChange","onCalciteInternalInputTextBlur","onPaste","prefixText","onCalciteInternalInputNumberBlur","focusElement","currentColor","nextColor","normalizedLonghand","changed","calciteColorPickerHexInputChange","amount","nudgedChannels","rgbChannels","nudgedRGBChannels","nudgedAlpha","noColorSwatch","checker","COLORS","borderLight","borderDark","checkerSquareSize","CHECKER_DIMENSIONS","squareSize","size","colorPickerSwatchCss","CalciteColorPickerSwatchStyle0","ColorPickerSwatch","isEmpty","classes","xmlns","renderSwatch","active","borderRadius","theme","getModeName","borderColor","commonSwatchProps","rx","Fragment","id","x1","y1","patternUnits"],"sources":["../../node_modules/color-name/index.js","../../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../../node_modules/simple-swizzle/index.js","../../node_modules/color-string/index.js","../../node_modules/color-convert/conversions.js","../../node_modules/color-convert/route.js","../../node_modules/color-convert/index.js","../../node_modules/color/index.js","src/components/color-picker/resources.ts","src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","src/components/color-picker/color-picker.tsx","src/components/color-picker-hex-input/resources.ts","src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow","src/components/color-picker-hex-input/color-picker-hex-input.tsx","src/components/color-picker-swatch/resources.ts","src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow","src/components/color-picker-swatch/color-picker-swatch.tsx"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","import Color from \"color\";\n\nexport const CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\",\n};\n\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\n\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100,\n};\n\n// 0 and 360 represent the same value, so we limit the hue to 359\nexport const HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\n\nexport const OPACITY_LIMITS = {\n  min: 0,\n  max: 100,\n};\n\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104,\n    },\n    colorField: {\n      height: 80,\n      width: 160,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204,\n    },\n    colorField: {\n      height: 150,\n      width: 272,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384,\n    },\n    colorField: {\n      height: 200,\n      width: 464,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n};\n\nexport const SCOPE_SIZE = 1;\n",":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 11px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport { Direction, getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   *\n   * @deprecated Use `clearable` instead\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  @Watch(\"allowEmpty\")\n  @Watch(\"clearable\")\n  handleAllowEmptyOrClearableChange(): void {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/main/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      isClearable && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private isClearable: boolean;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (this.isClearable && !input.value) {\n      inputValue = \"\";\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    }\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.isClearable && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n    const value = Number(input.value);\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX, offsetY } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.colorFieldRenderingContext,\n      bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureColorFieldColor(offsetX, offsetY);\n    this.colorFieldScopeNode.focus();\n  };\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.hueSliderRenderingContext,\n      bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureHueSliderColor(offsetX);\n    this.hueScopeNode.focus();\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.opacitySliderRenderingContext,\n      bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureOpacitySliderValue(offsetX);\n    this.opacityScopeNode.focus();\n  };\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    this.handleAllowEmptyOrClearableChange();\n\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        slider: { width: sliderWidth },\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeColorFieldScope}\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch class={CSS.preview} color={selectedColorInHex} scale=\"l\" />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.storeHueScope}\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.storeOpacityScope}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={this.isClearable}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const hue = (HUE_LIMIT_CONSTRAINED / width) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / width) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: dimensions.slider.width,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n",":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\nimport { CSS } from \"./resources\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n    this.onHexInputChange();\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if (key === \"Tab\" || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          scale={inputScale}\n          value={hexInputValue}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.storeHexInputRef}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberChange={this.onOpacityInputChange}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onKeyDown={this.onInputKeyDown}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.storeOpacityInputRef}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n","export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n","$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"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"}